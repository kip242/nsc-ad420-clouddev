swagger: '2.0'
info:
  description: This is a task API
  version: 1.0.0
  title: Swagger Task
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: petstore.swagger.io
basePath: /v2
tags:
  - name: users
    description: Operations about user
    externalDocs:
      description: Find out more about our store
      url: 'http://swagger.io'
schemes:
  - http
paths:
  /users:
    get:
      tags:
        - users
      summary: Get list of users
      description: This can only be done by the logged in user
      operationId: getListofUsers
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
    post:
      tags:
        - users
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Created user object
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: successful operation
        '405':
          description: invalid input
  '/users/{userid}':
    get:
      tags:
        - users
      summary: Get user by user name
      description: ''
      operationId: getUserById
      produces:
        - application/json
      parameters:
        - name: userid
          in: path
          description: 'The id that needs to be fetched. Use user1 for testing. '
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        '404':
          description: User not found
    put:
      tags:
        - users
      summary: Updated user
      description: This can only be done by the logged in user.
      operationId: updateUser
      produces:
        - application/json
      parameters:
        - name: userid
          in: path
          description: id that need to be updated
          required: true
          type: string
        - name: body
          in: body
          description: Updated user object
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: User updated
        '404':
          description: User not found
        '405':
          description: Invalid input
    delete:
      tags:
        - users
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      parameters:
        - name: userid
          in: path
          description: The id that needs to be deleted
          required: true
          type: string
      responses:
        '200':
          description: Delete successful
        '404':
          description: User not found
  '/users/{userid}/tasks':
    get:
      tags:
        - users
      summary: Get task by user name
      description: ''
      operationId: getUserTasksById
      produces:
        - application/json
      parameters:
        - name: userid
          in: path
          description: 'The id that needs to be fetched. Use user1 for testing. '
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Task'
        '404':
          description: User not found
    post:
      tags:
        - users
      summary: Create new task for user
      description: This can only be done by the logged in user.
      operationId: createTaskByUser
      produces:
        - application/json
      parameters:
        - name: userid
          in: path
          description: Created user object
          required: true
          type: integer
          format: int32
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/Task'
      responses:
        '200':
          description: New Task Created
        '404':
          description: User not found
        '405':
          description: Invalid input
  '/users/{userid}/tasks/{taskid}':
    get:
      tags:
        - users
      summary: Get taskId from username
      description: ''
      operationId: getTaskIdFromUsername
      produces:
        - application/json
      parameters:
        - name: userid
          in: path
          description: 'The id that needs to be fetched. Use user1 for testing. '
          required: true
          type: integer
          format: int32
        - name: taskid
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        '404':
          description: User not found
    put:
      tags:
        - users
      summary: Updated taskId by Username
      description: This can only be done by the logged in user.
      operationId: updateTaskIdbyUsername
      produces:
        - application/json
      parameters:
        - name: userid
          in: path
          description: task id that needs to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Updated user object
          required: true
          schema:
            $ref: '#/definitions/Task'
      responses:
        '200':
          description: Successful operation
        '404':
          description: User Not Found
        '405':
          description: Invalid Input
    delete:
      tags:
        - users
      summary: Delete taskID by user
      description: This can only be done by the logged in user.
      operationId: deleteTaskByUser
      produces:
        - application/json
      parameters:
        - name: userid
          in: path
          description: The id that needs to be deleted
          required: true
          type: string
        - name: taskid
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: Task Deleted
        '404':
          description: User not found
        '405':
          description: Invalid Input
definitions:
  User:
    type: object
    properties:
      firstname:
        type: string
      lastname:
        type: string
      userid:
        type: integer
        format: int32
      tasks:
        type: array
        items:
          type: integer
          format: int32
  Task:
    type: object
    properties:
      title:
        type: string
      description:
        type: string
      due date:
        type: integer
        format: int32
      status:
        type: string
      userid:
        type: integer
        format: int32
      taskid:
        type: integer
        format: int32
